@model EmployeesData.Models.CreateViewModel
@{
    ViewData["Title"] = "Add Employee";
}
<h4>Add Employee</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="@Model.Employee.FullName" class="control-label">Full Name <span class="text-danger">*</span> </label>
                <input asp-for="@Model.Employee.FullName" class="form-control" />
                <span asp-validation-for="@Model.Employee.FullName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Employee.Email" class="control-label"></label>
                <input asp-for="@Model.Employee.Email" class="form-control" />
                <span asp-validation-for="@Model.Employee.Email" class="text-danger"></span>
            </div>
            <div class="form-group ui-widget">
                <label for="tags" class="control-label">Skills</label> <br />
                @*<textarea id="tags" class="form-control"></textarea>*@
                @*<input id="tags"/>*@
            </div>
            <div id="skillsDiv" class="mb-5">
                <input id="tags" class="form-control mb-3" asp-for="@Model.Skills" />
            </div>
            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-info" onclick="" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>

    $.noConflict();
    jQuery(document).ready(function ($) {
        var availableTags = [];
        let terms = [];
        // get skills list
        $.ajax({
            url: '@Url.Action("Skills","Employees")',
            success: function (data) {
                $.map(data, function (item) {
                    availableTags.push(item['name'])
                })
            },
            error: function (xhr, status, error) {
                alert("Error: "+ error)
            }
        })
        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }

        function addSkill(skill) {
            var btn = $('<Button class="btn btn-primary mr-2 mb-2" type="button" id='+skill+'>' + skill +
                '<span class="text-white" style="font-weight:bold""> x</span>' + '</Button>');
            $("#skillsDiv").append(btn);
        }

        $("#tags")
            // don't navigate away from the field on tab when selecting an item
            .on("keydown", function (event) {
                console.log($.ui)
                if (event.keyCode === $.ui.keyCode.TAB &&
                    $(this).autocomplete("instance").menu.active) {
                    event.preventDefault();
                }
            })
            .autocomplete({
                minLength: 0,
                source: function (request, response) {
                    // delegate back to autocomplete, but extract the last term
                    response($.ui.autocomplete.filter(
                        availableTags, extractLast(request.term)));
                },
                focus: function () {
                    // prevent value inserted on focus
                    return false;
                },
                select: function (event, ui) {
                    terms = split(this.value);
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma at the end of each skill
                    terms.push("");
                    this.value = terms.join(",");
                    console.log(ui.item.value)
                    addSkill(ui.item.value);
                    return false;
                }
            });

    });
</script>